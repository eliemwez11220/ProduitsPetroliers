<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Commande extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Commande_model');
    } 

    /*
     * Listing of commandes
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('commande/index?');
        $config['total_rows'] = $this->Commande_model->get_all_commandes_count();
        $this->pagination->initialize($config);

        $data['commandes'] = $this->Commande_model->get_all_commandes($params);
        
        $data['_view'] = 'commande/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new commande
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('numRef','NumRef','required|is_unique[commandes.numRef]');
		$this->form_validation->set_rules('qteCom','QteCom','required');
		$this->form_validation->set_rules('produit_sid','Produit Sid','required');
		$this->form_validation->set_rules('abonne_sid','Abonne Sid','required');
		$this->form_validation->set_rules('charroi_sid','Charroi Sid','required');
		$this->form_validation->set_rules('zone_sid','Zone Sid','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'abonne_sid' => $this->input->post('abonne_sid'),
				'produit_sid' => $this->input->post('produit_sid'),
				'zone_sid' => $this->input->post('zone_sid'),
				'charroi_sid' => $this->input->post('charroi_sid'),
				'numRef' => $this->input->post('numRef'),
				'dateCom' => $this->input->post('dateCom'),
				'qteCom' => $this->input->post('qteCom'),
				'observation' => $this->input->post('observation'),
            );
            
            $commande_id = $this->Commande_model->add_commande($params);
            redirect('commande/index');
        }
        else
        {
			$this->load->model('Abonne_model');
			$data['all_abonnes'] = $this->Abonne_model->get_all_abonnes();

			$this->load->model('Produit_model');
			$data['all_produits'] = $this->Produit_model->get_all_produits();

			$this->load->model('Zone_model');
			$data['all_zones'] = $this->Zone_model->get_all_zones();

			$this->load->model('Charroi_model');
			$data['all_charrois'] = $this->Charroi_model->get_all_charrois();
            
            $data['_view'] = 'commande/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a commande
     */
    function edit($com_id)
    {   
        // check if the commande exists before trying to edit it
        $data['commande'] = $this->Commande_model->get_commande($com_id);
        
        if(isset($data['commande']['com_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('numRef','NumRef','required|is_unique[commandes.numRef]');
			$this->form_validation->set_rules('qteCom','QteCom','required');
			$this->form_validation->set_rules('produit_sid','Produit Sid','required');
			$this->form_validation->set_rules('abonne_sid','Abonne Sid','required');
			$this->form_validation->set_rules('charroi_sid','Charroi Sid','required');
			$this->form_validation->set_rules('zone_sid','Zone Sid','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'abonne_sid' => $this->input->post('abonne_sid'),
					'produit_sid' => $this->input->post('produit_sid'),
					'zone_sid' => $this->input->post('zone_sid'),
					'charroi_sid' => $this->input->post('charroi_sid'),
					'numRef' => $this->input->post('numRef'),
					'dateCom' => $this->input->post('dateCom'),
					'qteCom' => $this->input->post('qteCom'),
					'observation' => $this->input->post('observation'),
                );

                $this->Commande_model->update_commande($com_id,$params);            
                redirect('commande/index');
            }
            else
            {
				$this->load->model('Abonne_model');
				$data['all_abonnes'] = $this->Abonne_model->get_all_abonnes();

				$this->load->model('Produit_model');
				$data['all_produits'] = $this->Produit_model->get_all_produits();

				$this->load->model('Zone_model');
				$data['all_zones'] = $this->Zone_model->get_all_zones();

				$this->load->model('Charroi_model');
				$data['all_charrois'] = $this->Charroi_model->get_all_charrois();

                $data['_view'] = 'commande/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The commande you are trying to edit does not exist.');
    } 

    /*
     * Deleting commande
     */
    function remove($com_id)
    {
        $commande = $this->Commande_model->get_commande($com_id);

        // check if the commande exists before trying to delete it
        if(isset($commande['com_id']))
        {
            $this->Commande_model->delete_commande($com_id);
            redirect('commande/index');
        }
        else
            show_error('The commande you are trying to delete does not exist.');
    }
    
}
