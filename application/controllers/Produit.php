<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Produit extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produit_model');
    } 

    /*
     * Listing of produits
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('produit/index?');
        $config['total_rows'] = $this->Produit_model->get_all_produits_count();
        $this->pagination->initialize($config);

        $data['produits'] = $this->Produit_model->get_all_produits($params);
        
        $data['_view'] = 'produit/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new produit
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('designation','Designation','required');
		$this->form_validation->set_rules('categorie_sid','Categorie Sid','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'categorie_sid' => $this->input->post('categorie_sid'),
				'designation' => $this->input->post('designation'),
				'natureProduit' => $this->input->post('natureProduit'),
            );
            
            $produit_id = $this->Produit_model->add_produit($params);
            redirect('produit/index');
        }
        else
        {
			$this->load->model('Category_model');
			$data['all_categories'] = $this->Category_model->get_all_categories();
            
            $data['_view'] = 'produit/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a produit
     */
    function edit($pro_id)
    {   
        // check if the produit exists before trying to edit it
        $data['produit'] = $this->Produit_model->get_produit($pro_id);
        
        if(isset($data['produit']['pro_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('designation','Designation','required');
			$this->form_validation->set_rules('categorie_sid','Categorie Sid','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'categorie_sid' => $this->input->post('categorie_sid'),
					'designation' => $this->input->post('designation'),
					'natureProduit' => $this->input->post('natureProduit'),
                );

                $this->Produit_model->update_produit($pro_id,$params);            
                redirect('produit/index');
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_categories'] = $this->Category_model->get_all_categories();

                $data['_view'] = 'produit/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The produit you are trying to edit does not exist.');
    } 

    /*
     * Deleting produit
     */
    function remove($pro_id)
    {
        $produit = $this->Produit_model->get_produit($pro_id);

        // check if the produit exists before trying to delete it
        if(isset($produit['pro_id']))
        {
            $this->Produit_model->delete_produit($pro_id);
            redirect('produit/index');
        }
        else
            show_error('The produit you are trying to delete does not exist.');
    }
    
}
